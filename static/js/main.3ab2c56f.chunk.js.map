{"version":3,"sources":["common/c1-SuperInputText/SuperInputText.module.css","common/c2-SuperButton/SuperButton.module.css","common/c3-SuperCheckbox/SuperCheckbox.module.css","pages/test/test.module.css","pages/login/login.tsx","pages/profile/profile.tsx","pages/404page/404.tsx","pages/enterNewPasssword/enterNewPasssword.tsx","pages/register/register.tsx","pages/restorePassword/restorePassword.tsx","common/c2-SuperButton/SuperButton.tsx","common/c3-SuperCheckbox/SuperCheckbox.tsx","common/c8-SuperDoubleRange/SuperDoubleRange.tsx","common/c1-SuperInputText/SuperInputText.tsx","pages/test/testPage.tsx","App.tsx","reportWebVitals.ts","redux/profile-reducer/profile-reducer.ts","redux/auth-reducer/auth-reducer.ts","redux/app-reducer/app-reducer.ts","redux/store.ts","index.tsx"],"names":["module","exports","LoginPage","ProfilePage","PageNotFounded","className","NewPassword","RegistrationPage","RestorePasswordPage","SuperButton","red","restProps","finalClassName","s","default","SuperCheckbox","type","onChange","onChangeChecked","children","spanClassName","useState","checked","setChecked","finalInputClassName","checkbox","e","currentTarget","SuperDoubleRange","value2","setValue2","value3","setValue3","onChangeRange","value","Array","isArray","Slider","style","color","width","event","valueLabelDisplay","aria-labelledby","getAriaValueText","SuperInputText","onKeyPress","onChangeText","onEnter","error","setError","text","setText","finalSpanClassName","input","errorInput","inputWrapper","key","alert","onBlur","TestStand","classes","wrapper","grid","PATH","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","profile","action","auth","app","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ab2c56f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__esdH0\",\"inputWrapper\":\"SuperInputText_inputWrapper__1m8kn\",\"superInput\":\"SuperInputText_superInput__1laiW\",\"errorInput\":\"SuperInputText_errorInput__2rykv\",\"error\":\"SuperInputText_error__lbV5W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3oh3v\",\"red\":\"SuperButton_red__3KiJH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2tQgR\",\"spanClassName\":\"SuperCheckbox_spanClassName__2KZhF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"test_wrapper__3BbQM\",\"grid\":\"test_grid__1vqFI\"};","import React from 'react'\r\n\r\nexport const LoginPage = () => {\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const ProfilePage = () => {\r\n    return (\r\n        <div>\r\n            <h1>ProfilePage</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './404.css'\r\n\r\nexport const PageNotFounded = () => {\r\n    return (\r\n        <div className={`wrapper`}>\r\n            <div className=\"face\">\r\n                <div className=\"band\">\r\n                    <div className=\"red\"></div>\r\n                    <div className=\"white\"></div>\r\n                    <div className=\"blue\"></div>\r\n                </div>\r\n                <div className=\"eyes\"></div>\r\n                <div className=\"dimples\"></div>\r\n                <div className=\"mouth\"></div>\r\n            </div>\r\n\r\n            <h1 className={`text`}>Oops! Something went wrong!</h1>\r\n            <div className=\"btn\">Return to Home</div>\r\n        </div>\r\n\r\n\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const NewPassword = () => {\r\n    return (\r\n        <div>\r\n            <h1>NewPassword</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const RegistrationPage = () => {\r\n    return (\r\n        <div>\r\n            <h1>RegistrationPage</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const RestorePasswordPage = () => {\r\n    return (\r\n        <div>\r\n            <h1>RestorePasswordPage</h1>\r\n        </div>\r\n    )\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = ` ${s.default} ${red ? s.red : s.default}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, useState} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [checked, setChecked] = useState<boolean>(false)\n\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <>\n            <label>\n                <input\n                    type={'checkbox'}\n                    onChange={testOnChange}\n                    className={finalInputClassName}\n                    checked={checked}\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n                />\n                {children && <span className={s.spanClassName}>{children}</span>}\n            </label>\n        </>\n// благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import { Slider } from \"@material-ui/core\";\r\nimport React, {useState} from \"react\";\r\n\r\n\r\nconst SuperDoubleRange: React.FC = (\r\n\r\n) => {\r\n    const [value2, setValue2] = useState(0);\r\n    const [value3, setValue3] = useState(100);\r\n    function valuetext(value: number) {\r\n        return `${value}`;\r\n    }\r\n    const onChangeRange = (value: number | number[]) => {\r\n        if (Array.isArray(value)) {\r\n            setValue2(value[0])\r\n            setValue3(value[1])\r\n        }\r\n    }\r\n    const handleChange  = (event: React.ChangeEvent<{}>, value: (number | number[])) => {\r\n        onChangeRange && onChangeRange(value as number)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <span>{value2}</span>\r\n            <Slider\r\n                style={{\r\n                    color:\"grey\",\r\n                    width:150\r\n                }}\r\n                value={[value2,value3]}\r\n                onChange={handleChange}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                getAriaValueText={valuetext}>\r\n                DoubleRange\r\n            </Slider>\r\n            <span>{value3}</span>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default SuperDoubleRange;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent, useState} from 'react'\nimport s from './SuperInputText.module.css'\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n\n    const [error, setError] = useState(false);\n    const [text, setText] = useState('');\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n        if (text) {\n            setError(false)\n        }\n        setText(e.currentTarget.value)\n\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n        e.key === 'Enter' // и если нажата кнопка Enter\n        && alert(text)\n    }\n    const onBlur = (e: ChangeEvent<HTMLInputElement>) => {\n        if(text === '') {\n            setError(true)\n        }\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : ''}`\n\n    return (\n        <>\n            <div className={s.inputWrapper}>\n                <input\n                    type={'text'}\n                    onChange={onChangeCallback}\n                    onKeyPress={onKeyPressCallback}\n                    className={finalInputClassName}\n                    value={text}\n                    onBlur={onBlur}\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                />\n                {error && <div className={finalSpanClassName}>This field is compulsory</div>}\n            </div>\n\n        </>\n    )\n}\n\nexport default SuperInputText","import React from 'react'\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperDoubleRange from \"../../common/c8-SuperDoubleRange/SuperDoubleRange\";\r\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\r\n\r\nimport classes from './test.module.css'\r\n\r\nexport const TestStand = () => {\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div className={classes.grid}>\r\n\r\n\r\n                <SuperInputText />\r\n\r\n                <SuperDoubleRange/>\r\n                <SuperButton red>\r\n                    hi\r\n                </SuperButton>\r\n                <SuperButton >\r\n                    Ignat ^^)\r\n                </SuperButton>\r\n                <SuperCheckbox>\r\n                    Change\r\n                </SuperCheckbox>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport {LoginPage} from \"./pages/login/login\";\nimport {ProfilePage} from \"./pages/profile/profile\";\nimport {PageNotFounded} from \"./pages/404page/404\";\nimport {NewPassword} from \"./pages/enterNewPasssword/enterNewPasssword\";\nimport {RegistrationPage} from \"./pages/register/register\";\nimport {RestorePasswordPage} from \"./pages/restorePassword/restorePassword\";\nimport {TestStand} from \"./pages/test/testPage\";\n\n\nexport const PATH = {\n  LOGIN: '/login',\n  PROFILE: '/profile',\n  NEW_PASSWORD:'/new-pass',\n  REGISTER:'/registration',\n  RESTORE_PASS:'/restore-pass',\n  TEST_STAND:'/stand',\n  DEFAULT:'/',\n  ALL:'*',\n}\n\nconst App = () =>  {\n  return (\n    <div >\n      <Switch>\n        <Route exact path={PATH.DEFAULT} render={() => <LoginPage/>}/>\n        <Route path={PATH.LOGIN} render={() => <LoginPage/>}/>\n        <Route path={PATH.PROFILE} render={() => <ProfilePage/>}/>\n        <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword/>}/>\n        <Route path={PATH.REGISTER} render={() => <RegistrationPage/>}/>\n        <Route path={PATH.RESTORE_PASS} render={() => <RestorePasswordPage/>}/>\n        <Route path={PATH.TEST_STAND} render={() => <TestStand/>}/>\n        <Route render={() => <PageNotFounded/>}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\n\r\n\r\nconst initialState = {}\r\ntype profileReducer = typeof initialState\r\ntype profileReducerType = {type?:''}\r\n\r\nexport const profileReducer = (state: profileReducer = initialState, action: profileReducerType): profileReducer => {\r\n    switch (action.type) {\r\n\r\n        default:\r\n            return initialState\r\n    }\r\n}\r\n\r\n\r\n","\r\n\r\nconst initialState = {}\r\ntype authReducerType = typeof initialState\r\n\r\ntype authActionsType = {type?:''}\r\n\r\nexport const authReducer = (state: authReducerType = initialState, action: authActionsType): authReducerType => {\r\n    switch (action.type) {\r\n\r\n        default:\r\n            return initialState\r\n    }\r\n}\r\n","const initialState = {}\r\ntype appReducerType = typeof initialState\r\n\r\ntype appActionsType = {type?:''}\r\n\r\nexport const appReducer = (state: appReducerType = initialState, action: appActionsType): appReducerType => {\r\n    switch (action.type) {\r\n\r\n        default:\r\n            return initialState\r\n    }\r\n}","import {combineReducers, createStore} from \"redux\";\r\nimport { profileReducer } from \"./profile-reducer/profile-reducer\";\r\nimport {authReducer} from \"./auth-reducer/auth-reducer\";\r\nimport {appReducer} from \"./app-reducer/app-reducer\";\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    profile: profileReducer,\r\n    auth:authReducer,\r\n    app:appReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n\n  <React.StrictMode>\n      <BrowserRouter>\n          <Provider store={store}>\n              <App />\n          </Provider>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}